/* CompetitionApp.css */

@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&family=Roboto+Mono:wght@400;700&display=swap');

:root {
  --federal-blue: #0e0e52;
  --egyptian-blue: #28369e;
  --pumpkin: #fe712d;
  --text-color-light: #ecf0f1;
  --text-color-dark: #bdc3c7;
  --card-bg-transparent: rgba(40, 54, 158, 0.4);
  --danger-color: #e74c3c;
  --light-accent: rgba(255, 255, 255, 0.1);
}

body {
  font-family: 'Poppins', sans-serif;
  background-color: var(--federal-blue);
  color: var(--text-color-light);
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  overflow: hidden;
  perspective: 1000px;
}

.app-container {
  width: 90%;
  max-width: 900px;
  min-height: 650px;
  background: radial-gradient(circle at 50% 50%, var(--egyptian-blue) 0%, var(--federal-blue) 100%);
  border-radius: 20px;
  box-shadow: 0 0 50px rgba(40, 54, 158, 0.3), 0 0 20px rgba(254, 113, 45, 0.2);
  padding: 40px;
  box-sizing: border-box;
  text-align: center;
  position: relative;
  border: 1px solid rgba(40, 54, 158, 0.4);
  transform-style: preserve-3d;
}

.background-grid {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url('data:image/svg+xml;utf8,<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 0L20 5L20 15L10 20L0 15L0 5L10 0Z" stroke="%2328369E" stroke-width="0.5" fill="none"/></svg>');
    background-size: 40px 40px;
    opacity: 0.1;
    z-index: -1;
    animation: pan-background 60s linear infinite;
}

@keyframes pan-background {
    0% { background-position: 0% 0%; }
    100% { background-position: 100% 100%; }
}

.screen {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  gap: 20px;
  position: relative;
  z-index: 1;
}

.screen-shake {
  animation: shake 0.2s infinite;
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  50% { transform: translateX(5px); }
  75% { transform: translateX(-5px); }
}

.card-content {
  background-color: var(--card-bg-transparent);
  backdrop-filter: blur(10px);
  padding: 30px 40px;
  border-radius: 15px;
  border: 1px solid var(--egyptian-blue);
  box-shadow: 0 0 20px rgba(40, 54, 158, 0.1);
  width: 100%;
  max-width: 600px;
  position: relative;
  z-index: 10;
  transition: all 0.5s ease;
}

.countdown-border {
    animation: border-pulse 1s infinite alternate;
}

@keyframes border-pulse {
    from {
        box-shadow: 0 0 10px var(--danger-color), inset 0 0 10px var(--danger-color);
        border-color: var(--danger-color);
        transform: scale(1);
    }
    to {
        box-shadow: 0 0 25px var(--danger-color), inset 0 0 25px var(--danger-color);
        border-color: var(--danger-color);
        transform: scale(1.01);
    }
}

.screen-title {
  font-size: 2.5rem;
  color: var(--pumpkin);
  margin-bottom: 25px;
  text-shadow: 0 0 15px var(--pumpkin), 0 0 30px rgba(254, 113, 45, 0.3);
  font-weight: 700;
}

.problem-statement {
  font-family: 'Roboto Mono', monospace;
  font-size: 1.1rem;
  font-weight: 400;
  line-height: 1.6;
  margin-bottom: 15px;
  color: var(--text-color-light);
  min-height: 40px;
  text-align: left;
}

.problem-label {
    font-weight: bold;
    color: var(--text-color-dark);
    display: block;
    margin-bottom: 5px;
}

.glitch-text {
  animation: text-glitch 0.2s infinite;
  text-shadow: 2px 2px var(--danger-color), -2px -2px var(--secondary-color, #00bcd4);
  color: transparent;
}

@keyframes text-glitch {
  0% { transform: translate(1px, 1px); }
  25% { transform: translate(-1px, -1px); }
  50% { transform: translate(1px, -1px); }
  75% { transform: translate(-1px, 1px); }
  100% { transform: translate(1px, 1px); }
}

.typing-text {
  white-space: pre-wrap;
  overflow: hidden;
  display: inline-block;
  vertical-align: bottom;
}

.typing-cursor {
  display: inline-block;
  margin-left: 2px;
  font-size: 1.1em;
  color: var(--pumpkin);
  opacity: 1;
}

.blink {
  animation: blink 0.8s step-end infinite;
}

@keyframes blink {
  from, to { opacity: 0; }
  50% { opacity: 1; }
}

/* ... (all existing CSS before .bg-elements) ... */

.bg-elements {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  z-index: 0;
}

/* New Data Stream Element */
.data-stream {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(rgba(14, 14, 82, 0.4) 1px, transparent 1px), linear-gradient(90deg, rgba(14, 14, 82, 0.4) 1px, transparent 1px);
  background-size: 20px 20px;
  background-position: 0 0;
  animation: data-scroll 30s linear infinite;
}

@keyframes data-scroll {
  from { background-position: 0 0; }
  to { background-position: -200px 0; }
}

/* New Network Graph Element */
.network-graph {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at 10% 20%, rgba(254, 113, 45, 0.1) 1px, transparent 1px),
              radial-gradient(circle at 90% 80%, rgba(40, 54, 158, 0.15) 1px, transparent 1px),
              radial-gradient(circle at 40% 60%, rgba(254, 113, 45, 0.1) 1px, transparent 1px),
              radial-gradient(circle at 70% 30%, rgba(40, 54, 158, 0.15) 1px, transparent 1px);
  background-size: 400px 400px;
  background-position: 0 0;
  animation: network-pulse 4s infinite alternate;
}

@keyframes network-pulse {
  from { transform: scale(1); opacity: 0.8; }
  to { transform: scale(1.05); opacity: 1; }
}

/* ... (all other existing CSS after .bg-elements) ... */
.data-point {
  width: 15px;
  height: 15px;
  border-radius: 50%;
  background-color: var(--pumpkin);
  box-shadow: 0 0 10px var(--pumpkin);
  animation: point-float 15s infinite ease-in-out alternate;
}

.point-a { top: 20%; left: 15%; animation-delay: 1s; }
.point-b { bottom: 25%; right: 12%; animation-delay: 2s; }
.point-c { top: 40%; left: 70%; animation-delay: 0s; }
.point-d { bottom: 10%; left: 45%; animation-delay: 3s; }

@keyframes point-float {
  0% { transform: translate(0, 0); opacity: 0.1; }
  50% { transform: translate(10px, -5px); opacity: 0.3; }
  100% { transform: translate(0, 0); opacity: 0.1; }
}

.connection-line {
  background-color: var(--text-color-dark);
  height: 1px;
  opacity: 0.1;
  animation: line-fade 20s infinite linear alternate;
}

.line-a { width: 100px; top: 25%; left: 10%; transform: rotate(45deg); animation-delay: 0s; }
.line-b { width: 120px; bottom: 20%; right: 8%; transform: rotate(-30deg); animation-delay: 5s; }
.line-c { width: 150px; top: 45%; left: 60%; transform: rotate(60deg); animation-delay: 10s; }
.line-d { width: 80px; top: 70%; right: 20%; transform: rotate(10deg); animation-delay: 15s; }

@keyframes line-fade {
  0% { opacity: 0.05; width: 0px; }
  50% { opacity: 0.2; width: var(--line-width, 100px); }
  100% { opacity: 0.05; width: 0px; }
}
.line-a { --line-width: 100px; }
.line-b { --line-width: 120px; }
.line-c { --line-width: 150px; }
.line-d { --line-width: 80px; }


/* Buttons */
.cta-button, .mode-button, .control-button {
  background: var(--pumpkin);
  color: var(--federal-blue);
  border: none;
  padding: 18px 35px;
  font-size: 1.15rem;
  font-weight: 600;
  border-radius: 50px;
  cursor: pointer;
  transition: all 0.3s ease-in-out;
  box-shadow: 0 5px 20px rgba(254, 113, 45, 0.4);
  text-transform: uppercase;
  letter-spacing: 1px;
  outline: none;
  position: relative;
  overflow: hidden;
}

.cta-button:hover, .mode-button:hover, .control-button:hover {
  transform: translateY(-5px) scale(1.02);
  box-shadow: 0 8px 30px rgba(254, 113, 45, 0.6), 0 0 40px var(--egyptian-blue);
}

.cta-button:active, .mode-button:active, .control-button:active {
  transform: translateY(-2px);
  box-shadow: 0 3px 10px rgba(254, 113, 45, 0.3);
}

.cta-button::before, .mode-button::before, .control-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
  transition: left 0.5s ease;
}

.cta-button:hover::before, .mode-button:hover::before, .control-button:hover::before {
  left: 100%;
}

.pulse {
  animation: button-pulse 2s infinite alternate ease-in-out;
}

@keyframes button-pulse {
  from { transform: scale(1); box-shadow: 0 5px 20px rgba(254, 113, 45, 0.3); }
  to { transform: scale(1.03); box-shadow: 0 8px 30px rgba(254, 113, 45, 0.5); }
}

.shine {
    position: relative;
    overflow: hidden;
    color: var(--text-color-light);
    background: var(--egyptian-blue);
    box-shadow: 0 5px 15px rgba(40, 54, 158, 0.3);
}

.shine:hover {
    box-shadow: 0 8px 20px rgba(40, 54, 158, 0.5);
    transform: translateY(-3px);
}

.shine::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 0;
    height: 200%;
    background: rgba(255, 255, 255, 0.2);
    transform: rotate(45deg);
    transition: all 0.7s ease-in-out;
}

.shine:hover::before {
    width: 200%;
}

.category {
  font-family: 'Roboto Mono', monospace;
  font-size: 0.95rem;
  color: var(--text-color-dark);
  margin-bottom: 30px;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.mode-selection-text {
  font-family: 'Roboto Mono', monospace;
  font-size: 1.1rem;
  margin-bottom: 30px;
  color: var(--text-color-dark);
}

.button-group {
  display: flex;
  gap: 25px;
  flex-wrap: wrap;
  justify-content: center;
}

.mode-button {
  min-width: 220px;
}

.timer-screen {
  justify-content: space-between;
}

.timer-card {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 30px;
}

.timer-info-container {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 60px;
  flex-wrap: wrap;
}

.circular-progress {
  position: relative;
  width: 200px;
  height: 200px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.progress-ring {
  transform: rotate(-90deg);
}

.progress-ring-bg {
  stroke: rgba(255, 255, 255, 0.1);
}

.progress-ring-fg {
  stroke: var(--pumpkin);
  transition: stroke-dashoffset 1s linear;
  stroke-linecap: round;
  filter: drop-shadow(0 0 10px var(--pumpkin));
}

.timer-text-overlay {
  position: absolute;
  font-family: 'Poppins', sans-serif;
  font-size: 2.8rem;
  font-weight: 700;
  color: var(--text-color-light);
  text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
  transition: color 0.3s ease-in-out;
}

.danger-text-blink {
  color: var(--danger-color) !important;
  animation: blink 0.8s infinite alternate;
  text-shadow: 0 0 15px var(--danger-color), 0 0 30px rgba(231, 76, 60, 0.4);
}

/* ... (all existing CSS before .sand-count-container) ... */

.sand-count-container {
    width: 80px;
    height: 180px;
    background-color: transparent;
    border: 2px solid var(--text-color-dark);
    border-radius: 40px;
    position: relative;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.5);
    /* The clip-path creates the hourglass shape */
    /* clip-path: polygon(50% 0%, 100% 0, 100% 40%, 65% 50%, 100% 60%, 100% 100%, 50% 100%, 0% 100%, 0% 60%, 35% 50%, 0% 40%, 0% 0%); */
}

.sand-fill {
    width: 100%;
    background: linear-gradient(to top, var(--pumpkin), var(--egyptian-blue));
    position: absolute;
    bottom: 0;
    transition: height 1s linear;
}

.sand-fill::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at 50% 0%, rgba(255,255,255,0.2) 0%, transparent 70%);
}

.sand-flow {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 4px;
    height: 100%;
    background: linear-gradient(to top, var(--pumpkin), transparent);
    animation: sand-drop 2s infinite linear;
    opacity: 0.5;
}

@keyframes sand-drop {
    0% { transform: translate(-50%, -100%); opacity: 0; }
    10% { opacity: 0.5; }
    100% { transform: translate(-50%, 0); opacity: 0; }
}

/* ... (all other existing CSS after .sand-count-container) ... */
/* ... (all other existing CSS code) ... */

.problem-info {
  font-family: 'Roboto Mono', monospace;
  background-color: rgba(40, 54, 158, 0.15);
  border-left: 5px solid var(--egyptian-blue);
  padding: 25px;
  border-radius: 8px;
  text-align: left;
  box-shadow: 0 0 15px rgba(40, 54, 158, 0.3);
  width: calc(100% - 10px);
  max-width: 600px;
  transition: all 0.3s ease-in-out;
}

.problem-info:hover {
  transform: scale(1.02);
  box-shadow: 0 0 25px rgba(40, 54, 158, 0.5);
}

.problem-info h3 {
  color: var(--pumpkin);
  margin-top: 0;
  margin-bottom: 12px;
  font-weight: 700;
  font-size: 1.2rem;
  letter-spacing: 1px;
}

.problem-info p {
  margin: 0;
  line-height: 1.7;
  color: var(--text-color-light);
  font-size: 0.95rem;
}

.controls {
  display: flex;
  gap: 20px;
  margin-top: 30px;
}

.control-button {
  background: var(--egyptian-blue);
  border: 1px solid var(--pumpkin);
  color: var(--text-color-light);
  padding: 10px 20px;
  font-size: 1rem;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(254, 113, 45, 0.2);
}

.control-button:hover {
  background: var(--pumpkin);
  color: var(--federal-blue);
  box-shadow: 0 0 20px var(--pumpkin);
}

.control-button:disabled {
  background-color: rgba(255,255,255,0.1);
  color: var(--text-color-dark);
  border-color: rgba(255,255,255,0.05);
  cursor: not-allowed;
  box-shadow: none;
  transform: none;
}
.control-button:disabled::before {
  left: -100%;
}

.time-up-screen h1 {
  color: var(--danger-color);
  font-size: 3.5rem;
  text-shadow: 0 0 20px var(--danger-color), 0 0 40px rgba(231, 76, 60, 0.5);
  animation: alert-blink 1s infinite alternate;
}

@keyframes alert-blink {
  from { opacity: 1; transform: scale(1); }
  to { opacity: 0.8; transform: scale(1.02); }
}

.time-up-screen p {
  font-family: 'Roboto Mono', monospace;
  font-size: 1.1rem;
  margin-bottom: 40px;
  color: var(--text-color-dark);
}

/* New dramatic effects for time's up screen */
.times-up-effect {
    position: relative;
    overflow: hidden;
}

.shutter-overlay {
    position: absolute;
    left: 0;
    width: 100%;
    height: 50%;
    background-color: rgba(0, 0, 0, 0.85); /* Dark, semi-transparent overlay */
    z-index: 1; /* Position above content but below the card */
    transform: translateY(0);
    animation: shutter-close 1.5s ease-in-out forwards;
}

.shutter-top {
    top: -50%;
    animation-name: shutter-close-top;
}

.shutter-bottom {
    top: 100%;
    animation-name: shutter-close-bottom;
}

@keyframes shutter-close-top {
    0% { transform: translateY(0); }
    100% { transform: translateY(100%); }
}

@keyframes shutter-close-bottom {
    0% { transform: translateY(0); }
    100% { transform: translateY(-100%); }
}

/* Ensure content stays above the shutter */
.time-up-screen .card-content {
    z-index: 2;
}
.sand-flow.timer-paused {
  animation-play-state: paused;
}
